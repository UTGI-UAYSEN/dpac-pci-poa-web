{"version":3,"sources":["FiltroActores.js","FiltroAreas.js","App.js","index.js"],"names":["FiltroActores","props","seleccion","actor","actores","state","filtro","cambiaActor","bind","cambiaTodos","e","activar","this","tipo","input","setState","idActor","currentTarget","getAttribute","selectElems","push","className","data-id-filtro","onClick","sort","e1","e2","style","marginBottom","padding","display","flexWrap","fontSize","color","Component","FiltroAreas","accion","acciones","area","cambiaArea","indicesRoles","obtenerElementosCapacidadesTacticas","tactica","capContElems","capRol","capacidades","capsDetallesElems","j","capInfo","capsDetalles","mData","meta","id","desc","obtenerElementosIndicadoresMDVs","capContIndMDVs","i","ios","length","fontWeight","nombre","fontStyle","formula","mdvs","estandaresElems","estandares","margin","plazo","renderCell","cellInfo","column","idAccion","value","responsable","titulo","objetivo","baseElem","row","subRows","tacticas","original","capContIndicadoresMDVs","elemTactica","cod","Table","columns","data","filterTypes","React","useMemo","rows","filterValue","filter","rowValue","values","inputFiltro","rol","useTable","initialState","groupBy","sortBy","useFilters","useGroupBy","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","setFilter","colSpan","textAlign","float","width","href","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cell","verticalAlign","getCellProps","isGrouped","isAggregated","isPlaceholder","App","Header","backgroundColor","borderRadius","accessor","Cell","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.20937bad.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass FiltroActores extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const seleccion = {};\r\n\r\n        for (let actor in props.actores)\r\n            seleccion[actor] = 1;\r\n\r\n        this.state = {\r\n            seleccion,\r\n            filtro: props.filtro\r\n        };\r\n\r\n        this.cambiaActor = this.cambiaActor.bind(this);\r\n        this.cambiaTodos = this.cambiaTodos.bind(this);\r\n    }\r\n\r\n    cambiaTodos(e, activar) {\r\n        for (let actor in this.state.seleccion)\r\n            this.state.seleccion[actor] = activar ? 1 : 0;\r\n\r\n        this.state.filtro('tacticas', { tipo: 'actor', input: this.state.seleccion });\r\n        this.setState(this.state);\r\n    }\r\n\r\n    cambiaActor(e) {\r\n        let idActor = e.currentTarget.getAttribute('data-id-filtro');\r\n        this.state.seleccion[idActor] = this.state.seleccion[idActor] == 0 ? 1 : 0;\r\n\r\n        this.state.filtro('tacticas', { tipo: 'actor', input: this.state.seleccion });\r\n        this.setState(this.state);        \r\n    }\r\n\r\n    render() {\r\n        let selectElems = []\r\n\r\n        for (let actor in this.state.seleccion) {\r\n            selectElems.push(\r\n                <div\r\n                    className={'elemFiltro ' + (this.state.seleccion[actor] == 0 ? 'filtroOff' : 'filtroOn')}\r\n                    data-id-filtro={actor}\r\n                    onClick={this.cambiaActor}\r\n                >\r\n                    {actor}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        selectElems.sort((e1, e2) => {\r\n            if(e2.props['data-id-filtro'] < e1.props['data-id-filtro'])\r\n                return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n        return <div style={{ marginBottom: '10px', padding: '5px', display: 'flex', flexWrap: 'wrap' }}>\r\n            <div style={{ fontSize: '14px', marginBottom: '5px', color: 'darkblue' }}>Filtro capacidades:</div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, true)}\r\n            >\r\n                Todas\r\n            </div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, false)}\r\n            >\r\n                Ninguna\r\n            </div>\r\n            {selectElems}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FiltroActores","import React, { Component } from 'react'\r\n\r\nclass FiltroAreas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const seleccion = {};\r\n\r\n        for (let accion in props.acciones) {\r\n            seleccion[props.acciones[accion].area] = 1;\r\n        } \r\n\r\n        this.state = {\r\n            seleccion,\r\n            filtro: props.filtro\r\n        };\r\n\r\n        this.cambiaArea = this.cambiaArea.bind(this);\r\n        this.cambiaTodos = this.cambiaTodos.bind(this);\r\n    }\r\n\r\n    cambiaTodos(e, activar) {\r\n        for (let area in this.state.seleccion)\r\n            this.state.seleccion[area] = activar ? 1 : 0;\r\n\r\n        this.state.filtro('accion', { tipo: 'area', input: this.state.seleccion });\r\n        this.setState(this.state);\r\n    }\r\n\r\n    cambiaArea(e) {\r\n        let area = e.currentTarget.getAttribute('data-id-filtro');\r\n        this.state.seleccion[area] = this.state.seleccion[area] == 0 ? 1 : 0;\r\n\r\n        this.state.filtro('accion', { tipo: 'area', input: this.state.seleccion });\r\n        this.setState(this.state);        \r\n    }\r\n\r\n    render() {\r\n        let selectElems = []\r\n\r\n        for (let area in this.state.seleccion) {\r\n            selectElems.push(\r\n                <div\r\n                    className={'elemFiltro ' + (this.state.seleccion[area] == 0 ? 'filtroOff' : 'filtroOn')}\r\n                    data-id-filtro={area}\r\n                    onClick={this.cambiaArea}\r\n                >\r\n                    {area}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        selectElems.sort((e1, e2) => {\r\n            if(e2.props['data-id-filtro'] < e1.props['data-id-filtro'])\r\n                return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n        return <div style={{ padding: '5px', display: 'flex', flexWrap: 'wrap' }}>\r\n            <div style={{ fontSize: '14px', marginBottom: '5px', color: 'darkblue' }}>Filtro área:</div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, true)}\r\n            >\r\n                Todas\r\n            </div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, false)}\r\n            >\r\n                Ninguna\r\n            </div>\r\n            {selectElems}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FiltroAreas","import React from 'react'\nimport { useTable, useFilters, useGroupBy, useSortBy } from 'react-table'\nimport {matchSorter} from 'match-sorter'\nimport mData from './data.json'\nimport FiltroActores from './FiltroActores'\nimport FiltroAreas from './FiltroAreas'\n\nconst indicesRoles = { 'Responsable': 0, 'Aprobador': 1, 'Soporte': 2, 'Consultado': 3, 'Informado': 4 }\n\nfunction obtenerElementosCapacidadesTacticas(tactica) {\n  let capContElems = [ null, null, null, null, null ] ;\n\n  for(let capRol in tactica.capacidades) {\n    let capsDetallesElems = [];\n\n    for(let j in tactica.capacidades[capRol]) {\n      let capInfo = tactica.capacidades[capRol][j];\n      let capsDetalles = mData.meta.capacidades[capInfo.id];\n\n      capsDetallesElems.push(<div className=\"contCapDetalle\">\n        <div className='genLabelB'>{capsDetalles.actor}</div>        \n        <div className='genLabelG'>{capsDetalles.tipo}</div>\n        <div className='nombreCapacidad'>{capsDetalles.desc} </div>\n      </div>);\n    }\n\n    capContElems[indicesRoles[capRol]] = <div className=\"contCapRol\">\n      <div className=\"contRol\">{capRol}</div>\n      <div className=\"contCapsDetalles\">\n        {capsDetallesElems}\n      </div>\n    </div>;\n  }\n\n  return capContElems;\n}\n\nfunction obtenerElementosIndicadoresMDVs(tactica) {\n  let capContIndMDVs = [];\n\n  if(tactica.ios.length > 0) {\n    capContIndMDVs.push(<div className=\"contInd\">\n      <div className=\"contIndDesc\">\n        <div>\n          <span className=\"genLabelBL\">Indicador</span> \n          <span style={{ fontWeight: 'bold' }}>{tactica.ios[0].nombre}</span>\n        </div>\n        <div>\n          <span style={{ fontStyle: 'italic' }}>{tactica.ios[0].formula}</span>\n        </div>\n      </div>\n      <div className=\"contIndMeta\">\n        <div style={{ fontSize: '13px', fontWeight: 'bold' }}>Meta</div>\n        <div style={{ fontSize: '20px', fontWeight: 'bold' }}>{tactica.ios[0].meta}</div>\n      </div>\n    </div>);\n  }\n\n  for(let i in tactica.mdvs) {\n    let estandaresElems = [];\n\n    for(let j in tactica.mdvs[i].estandares) {\n      estandaresElems.push(<li style={{ margin: '0px' }}>{tactica.mdvs[i].estandares[j]}</li>)\n    }\n\n    capContIndMDVs.push(<div className=\"contMDV\">\n      <div className=\"contMDVDesc\">\n        <div>\n          <span className=\"genLabelBL\">MDV</span>\n          <span style={{ fontWeight: 'bold' }}>{tactica.mdvs[i].nombre}</span>\n        </div>\n        <div className=\"contMDVEstandares\">\n          <div className=\"contListaEstandares\">\n            <ul>{estandaresElems}</ul>\n          </div>\n        </div>\n      </div>\n      {tactica.mdvs[i].plazo ? <div className=\"contMDVPlazo\">\n        <div style={{ fontSize: '12px', fontWeight: 'bold' }}>Plazo</div>\n        <div style={{ fontSize: '20px', fontWeight: 'bolder' }}>{tactica.mdvs[i].plazo}</div>\n      </div> : <></>}\n    </div>);\n  }\n\n  return capContIndMDVs;\n}\n\nfunction renderCell(cellInfo) {\n  if(cellInfo.column.id == 'accion') {\n    const idAccion = cellInfo.value;\n    const accion = mData.meta.acciones[idAccion];\n    const respAccion = mData.meta.actores[accion.responsable];\n\n    return <div className=\"contAccion\">\n      <div className=\"contAccionInfo\">\n        <div className='accionId'>{idAccion}</div>\n        <div className='genLabelB'>{accion.responsable}</div>\n        <div className='genLabelG'>{accion.tipo}</div>\n      </div>\n      <div className=\"contAccionDetalle\">\n        <div className='accionTitulo'>{accion.titulo}</div>\n        <div className='accionObjetivo'>{accion.objetivo}</div>\n        </div>\n    </div>;\n  }\n  else if(cellInfo.column.id == 'tacticas') {\n    //console.log(cellInfo);\n    let baseElem = []\n\n    for(let i in cellInfo.row.subRows) {\n      const tactica = mData.meta.tacticas[cellInfo.row.subRows[i].original.tactica];\n\n      const capContElems = obtenerElementosCapacidadesTacticas(tactica);\n      const capContIndicadoresMDVs = obtenerElementosIndicadoresMDVs(tactica);\n\n      const elemTactica = <div className=\"contTactica\">\n        <div className=\"contTacticaDesc\">\n          <div className=\"tacticaId\">{tactica.tipo} {tactica.cod}</div>\n          <div className=\"tacticaDesc\">{tactica.desc}</div>\n        </div>\n        <div className=\"contTacticaDetalles\">\n          <div className=\"contTacticaCaps\">            \n            {capContElems}\n          </div>\n          <div className=\"contTacticaIndMDVs\">\n          {capContIndicadoresMDVs}\n          </div>\n        </div>\n      </div>\n\n      baseElem.push(elemTactica);\n    }\n\n    return <>{baseElem}</>;\n  }\n  else if(cellInfo.column.id == 'mdvs-ios') {\n    return <div>{cellInfo.value}</div>;\n  }\n  else {\n    return 'No configurado.'\n  }\n}\n\nfunction Table({ columns, data }) {\n  const filterTypes = React.useMemo(\n    () => ({\n      actor: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          const rowValue = row.values[id];\n\n          if(filterValue.tipo == 'actor') {\n            let inputFiltro = filterValue.input;\n\n            if(id == 'accion') {\n              let accion = mData.meta.acciones[rowValue];\n\n              return inputFiltro[accion.responsable] == 1 ? true : false;\n            }\n            else if (id == 'tacticas') {\n              let tactica = mData.meta.tacticas[rowValue];\n\n              for(let rol in tactica.capacidades) {\n                for(let j in tactica.capacidades[rol]) {\n                  let actorCap = mData.meta.capacidades[tactica.capacidades[rol][j].id].actor;\n\n                  if(inputFiltro[actorCap] == 1)\n                    return true;\n                }\n              }\n            }\n          }\n          else if(filterValue.tipo == 'area') {\n            let inputFiltro = filterValue.input;\n\n            if(id == 'accion') {\n              let accion = mData.meta.acciones[rowValue];\n              return inputFiltro[accion.area] == 1 ? true : false;\n            }\n\n            return false;\n          }\n\n          return false;\n        })\n      },\n    }),\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter,\n  } = useTable({ \n    columns, \n    data,\n    initialState: {\n      groupBy: [ 'accion' ],\n      sortBy: [ { id: 'accion' }, { id: 'tacticas' } ]\n    },\n    filterTypes\n   },   \n   useFilters,\n   useGroupBy, \n   useSortBy\n  )\n\n  return (\n    <>      \n      <div>\n        <table {...getTableProps()}>\n          <thead>            \n            <tr>\n              <th className='headerFiltros' colSpan='2' style={{ textAlign: 'left' }}>\n                <div style={{ float: 'right', width: '250px' }}>\n                  <div style={{ fontWeight: 'bolder', fontSize: '40px', color: 'navy', textAlign: 'right' }}>POA 2021</div>\n                  <div style={{ fontWeight: 'bold', fontSize: '12px', textAlign: 'right' }}>Versión 1.0</div>\n                  <div style={{ fontWeight: 'bold', fontSize: '10px', textAlign: 'right' }}>\n                    Desarrollado por <span style={{ color: 'darkblue' }}>Dirección de Planificación y Aseguramiento de la Calidad</span></div>\n                  <div style={{ fontWeight: 'bold', fontSize: '10px', textAlign: 'right' }}>Consultas: <a href = \"enrique.urra@uaysen.cl\">enrique.urra@uaysen.cl</a></div>                    \n                </div>\n                <FiltroAreas \n                  acciones={mData.meta.acciones}\n                  filtro={setFilter}\n                />\n                <FiltroActores \n                  actores={mData.meta.actores}\n                  filtro={setFilter}\n                />\n              </th>\n            </tr>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th width={column.width} {...column.getHeaderProps()}>\n                    {column.render('Header')}                  \n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.length == 0 ? <tr><td colSpan='2' style={{ textAlign: 'center', fontWeight: 'bold' }}>No hay datos que mostrar.</td></tr> :\n             rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td style={{ verticalAlign: 'top' }} {...cell.getCellProps()}>\n                        {cell.isGrouped ? (\n                          // If it's a grouped cell, add an expander and row count\n                          <>\n                            {cell.render('Cell')}\n                          </>\n                        ) : cell.isAggregated ? (\n                          // If the cell is aggregated, use the Aggregated\n                          // renderer for cell\n                          cell.render('Aggregated')\n                        ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\n                          // Otherwise, just render the regular cell\n                          cell.render('Cell')\n                        )}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })} \n          </tbody>\n        </table>\n      </div>      \n    </>\n  )\n}\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        id: \"accion\",\n        Header: <div style={{ backgroundColor: 'black', color: 'white', borderRadius: '5px' }}>\n          Acción\n        </div>,\n        accessor: 'accion',\n        Cell: renderCell,\n        //Filter: SelectColumnFilter,\n        filter: 'actor',\n        width: '30%'/*,\n        sortType: sortFuncs.actor*/\n      },\n      {\n        id: \"tacticas\",\n        Header: <div style={{ backgroundColor: 'black', color: 'white', borderRadius: '5px' }}>\n          Tacticas, roles, indicadores y MDVs\n        </div>,\n        accessor: 'tactica',\n        Cell: renderCell,\n        filter: 'actor',\n        width: '70%'\n        //Cell: renderCell\n      }\n    ],\n    []\n  )\n\n  return (\n    <Table columns={columns} data={mData.data} />\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}