{"version":3,"sources":["FiltroPOA.js","FiltroActores.js","FiltroAreas.js","App.js","index.js"],"names":["FiltroPOA","Component","props","seleccion","obtenerSelector","idActor","accionId","data","acciones","accion","area","responsable","resp","tacticaId","tacticas","tactica","rol","capacidades","i","idCap","id","actor","cap","state","filtro","e","activar","this","filtroInfo","undefined","setState","tipoCambio","currentTarget","getAttribute","selectElems","push","className","style","display","alignItems","padding","data-id-filtro","onClick","cambiaActor","sort","e1","e2","flexWrap","cambiaTodos","indicesRoles","obtenerElementosCapacidadesTacticas","capContElems","capRol","capsDetallesElems","j","capInfo","capsDetalles","mData","meta","tipo","desc","obtenerElementosIndicadoresMDVs","capContIndMDVs","ios","length","fontWeight","nombre","fontStyle","formula","fontSize","mdvs","estandaresElems","estandares","margin","plazo","renderCell","cellInfo","column","idAccion","value","actores","titulo","objetivo","baseElem","row","subRows","original","capContIndicadoresMDVs","elemTactica","cod","prioridad","Table","columns","filterTypes","React","useMemo","rows","filterValue","filter","values","actorCap","useTable","initialState","groupBy","sortBy","useFilters","useGroupBy","useSortBy","getTableProps","getTableBodyProps","headerGroups","prepareRow","setFilter","colSpan","textAlign","float","width","color","href","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","getRowProps","cells","cell","verticalAlign","getCellProps","isGrouped","isAggregated","isPlaceholder","App","Header","backgroundColor","borderRadius","accessor","Cell","ReactDOM","document","getElementById"],"mappings":"+OAiIeA,GC/HaC,YCAFA,Y,kDFCtB,WAAYC,GAAQ,IAAD,sBACf,cAAMA,GAEN,IAAMC,EAAY,GACZC,EAAkB,SAACC,GAIrB,OAHIF,EAAUE,KACVF,EAAUE,GAAW,IAElBF,EAAUE,IAGrB,IAAK,IAAIC,KAAYJ,EAAMK,KAAKC,SAAU,CACtC,IAAIC,EAASP,EAAMK,KAAKC,SAASF,GAEdF,EAAgBK,EAAOC,MAC7BA,MAAO,EAEDN,EAAgBK,EAAOE,aAC7BC,MAAO,EAGxB,IAAK,IAAIC,KAAaX,EAAMK,KAAKO,SAAU,CACvC,IAAIC,EAAUb,EAAMK,KAAKO,SAASD,GAElC,IAAI,IAAIG,KAAOD,EAAQE,YACnB,IAAI,IAAIC,KAAKH,EAAQE,YAAYD,GAAM,CACnC,IAAIG,EAAQJ,EAAQE,YAAYD,GAAKE,GAAGE,GAGtBhB,EAFLF,EAAMK,KAAKU,YAAYE,GAEKE,OAC7BC,KAAM,GA9Bf,OAmCf,EAAKC,MAAQ,CACTpB,YACAqB,OAAQtB,EAAMsB,QArCH,E,+CAyCnB,SAAYC,EAAGC,GACX,IAAK,IAAIL,KAASM,KAAKJ,MAAMpB,UAAW,CACpC,IAAIyB,EAAaD,KAAKJ,MAAMpB,UAAUkB,QAEhBQ,GAAnBD,EAAWlB,OAAmBkB,EAAWlB,OAAOgB,QAC7BG,GAAnBD,EAAWhB,OAAmBgB,EAAWhB,OAAOc,QAC9BG,GAAlBD,EAAWN,MAAkBM,EAAWN,MAAMI,GAGrDC,KAAKJ,MAAMC,OAAO,WAAYG,KAAKJ,MAAMpB,WACzCwB,KAAKG,SAASH,KAAKJ,S,yBAGvB,SAAYE,EAAGM,GACX,IAAI1B,EAAUoB,EAAEO,cAAcC,aAAa,kBAC3CN,KAAKJ,MAAMpB,UAAUE,GAAS0B,GAA2D,GAA7CJ,KAAKJ,MAAMpB,UAAUE,GAAS0B,GAAmB,EAAI,EACjGJ,KAAKJ,MAAMC,OAAO,WAAYG,KAAKJ,MAAMpB,WAEzCwB,KAAKG,SAASH,KAAKJ,S,oBAGvB,WAAU,IAAD,OACDW,EAAc,GAElB,IAAK,IAAIb,KAASM,KAAKJ,MAAMpB,UAAW,CACpC,IAAIyB,EAAaD,KAAKJ,MAAMpB,UAAUkB,GAEtCa,EAAYC,KACR,sBACIC,UAAU,aACVC,MAAO,CAAEC,QAAS,OAAQC,WAAY,UAF1C,UAII,qBAAKF,MAAO,CAAEG,QAAS,OAAvB,SAAiCnB,IACjC,sBAAKgB,MAAO,CAAEC,QAAS,QAAvB,eACwBT,GAAnBD,EAAWlB,KAAoB,KAC5B,qBACI0B,UAAW,aAAeR,EAAWlB,KAAO,YAAa,cACzD+B,iBAAgBpB,EAChBqB,QAAS,SAACjB,GAAD,OAAO,EAAKkB,YAAYlB,EAAG,SAHxC,oBAMgBI,GAAnBD,EAAWhB,KAAoB,KAC5B,qBACIwB,UAAW,aAAeR,EAAWhB,KAAO,YAAa,cACzD6B,iBAAgBpB,EAChBqB,QAAS,SAACjB,GAAD,OAAO,EAAKkB,YAAYlB,EAAG,SAHxC,oBAMeI,GAAlBD,EAAWN,IAAmB,KAC3B,qBACIc,UAAW,aAAeR,EAAWN,IAAM,YAAa,cACxDmB,iBAAgBpB,EAChBqB,QAAS,SAACjB,GAAD,OAAO,EAAKkB,YAAYlB,EAAG,QAHxC,sBAkBpB,OAPAS,EAAYU,MAAK,SAACC,EAAIC,GAClB,OAAGA,EAAG5C,MAAM,kBAAoB2C,EAAG3C,MAAM,kBAC9B,EAEJ,KAGJ,sBAAKmC,MAAO,CAAEC,QAAS,OAAQS,SAAU,QAAzC,UACH,qBACIX,UAAU,gBACVM,QAAS,SAACjB,GAAD,OAAO,EAAKuB,YAAYvB,GAAG,IAFxC,kBAMA,qBACIW,UAAU,gBACVM,QAAS,SAACjB,GAAD,OAAO,EAAKuB,YAAYvB,GAAG,IAFxC,kBAMCS,S,GA1HWjC,cGKlBgD,EAAe,CAAE,YAAe,EAAG,UAAa,EAAG,QAAW,EAAG,WAAc,EAAG,UAAa,GAErG,SAASC,EAAoCnC,GAC3C,IAAIoC,EAAe,CAAE,KAAM,KAAM,KAAM,KAAM,MAE7C,IAAI,IAAIC,KAAUrC,EAAQE,YAAa,CACrC,IAAIoC,EAAoB,GAExB,IAAI,IAAIC,KAAKvC,EAAQE,YAAYmC,GAAS,CACxC,IAAIG,EAAUxC,EAAQE,YAAYmC,GAAQE,GACtCE,EAAeC,EAAMC,KAAKzC,YAAYsC,EAAQnC,IAElDiC,EAAkBlB,KAAK,sBAAKC,UAAU,iBAAf,UACrB,qBAAKA,UAAU,YAAf,SAA4BoB,EAAanC,QACzC,qBAAKe,UAAU,YAAf,SAA4BoB,EAAaG,OACzC,sBAAKvB,UAAU,kBAAf,UAAkCoB,EAAaI,KAA/C,WAIJT,EAAaF,EAAaG,IAAW,sBAAKhB,UAAU,aAAf,UACnC,qBAAKA,UAAU,UAAf,SAA0BgB,IAC1B,qBAAKhB,UAAU,mBAAf,SACGiB,OAKP,OAAOF,EAGT,SAASU,EAAgC9C,GACvC,IAAI+C,EAAiB,GAoBrB,IAAI,IAAI5C,KAlBLH,EAAQgD,IAAIC,OAAS,GACtBF,EAAe3B,KAAK,sBAAKC,UAAU,UAAf,UAClB,sBAAKA,UAAU,cAAf,UACE,gCACE,sBAAMA,UAAU,aAAhB,uBACA,sBAAMC,MAAO,CAAE4B,WAAY,QAA3B,SAAsClD,EAAQgD,IAAI,GAAGG,YAEvD,8BACE,sBAAM7B,MAAO,CAAE8B,UAAW,UAA1B,SAAuCpD,EAAQgD,IAAI,GAAGK,eAG1D,sBAAKhC,UAAU,cAAf,UACE,qBAAKC,MAAO,CAAEgC,SAAU,OAAQJ,WAAY,QAA5C,kBACA,qBAAK5B,MAAO,CAAEgC,SAAU,OAAQJ,WAAY,QAA5C,SAAuDlD,EAAQgD,IAAI,GAAGL,cAK/D3C,EAAQuD,KAAM,CACzB,IAAIC,EAAkB,GAEtB,IAAI,IAAIjB,KAAKvC,EAAQuD,KAAKpD,GAAGsD,WAC3BD,EAAgBpC,KAAK,oBAAIE,MAAO,CAAEoC,OAAQ,OAArB,SAA+B1D,EAAQuD,KAAKpD,GAAGsD,WAAWlB,MAGjFQ,EAAe3B,KAAK,sBAAKC,UAAU,UAAf,UAClB,sBAAKA,UAAU,cAAf,UACE,gCACE,sBAAMA,UAAU,aAAhB,iBACA,sBAAMC,MAAO,CAAE4B,WAAY,QAA3B,SAAsClD,EAAQuD,KAAKpD,GAAGgD,YAExD,qBAAK9B,UAAU,oBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,6BAAKmC,WAIVxD,EAAQuD,KAAKpD,GAAGwD,MAAQ,sBAAKtC,UAAU,eAAf,UACvB,qBAAKC,MAAO,CAAEgC,SAAU,OAAQJ,WAAY,QAA5C,mBACA,qBAAK5B,MAAO,CAAEgC,SAAU,OAAQJ,WAAY,UAA5C,SAAyDlD,EAAQuD,KAAKpD,GAAGwD,WAClE,iCAIb,OAAOZ,EAGT,SAASa,EAAWC,GAClB,GAAyB,UAAtBA,EAASC,OAAOzD,GAAgB,CACjC,IAAM0D,EAAWF,EAASG,MACpBtE,EAASgD,EAAMC,KAAKlD,SAASsE,GAChBrB,EAAMC,KAAKsB,QAAQvE,EAAOE,aAE7C,OAAO,sBAAKyB,UAAU,aAAf,UACL,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,WAAf,SAA2B0C,IAC3B,qBAAK1C,UAAU,YAAf,SAA4B3B,EAAOE,cACnC,qBAAKyB,UAAU,YAAf,SAA4B3B,EAAOkD,UAErC,sBAAKvB,UAAU,oBAAf,UACE,qBAAKA,UAAU,eAAf,SAA+B3B,EAAOwE,SACtC,qBAAK7C,UAAU,iBAAf,SAAiC3B,EAAOyE,iBAIzC,GAAyB,YAAtBN,EAASC,OAAOzD,GAAkB,CAExC,IAAI+D,EAAW,GAEf,IAAI,IAAIjE,KAAK0D,EAASQ,IAAIC,QAAS,CACjC,IAAMtE,EAAU0C,EAAMC,KAAK5C,SAAS8D,EAASQ,IAAIC,QAAQnE,GAAGoE,SAASvE,SAE/DoC,EAAeD,EAAoCnC,GACnDwE,EAAyB1B,EAAgC9C,GAEzDyE,EAAc,sBAAKpD,UAAU,cAAf,UAClB,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,YAAf,UAA4BrB,EAAQ4C,KAApC,IAA2C5C,EAAQ0E,OAC7B,QAArB1E,EAAQ2E,UAAsB,qBAAKtD,UAAU,eAAf,yBAAkD,KACjF,qBAAKA,UAAU,cAAf,SAA8BrB,EAAQ6C,UAExC,sBAAKxB,UAAU,sBAAf,UACE,qBAAKA,UAAU,kBAAf,SACGe,IAEH,qBAAKf,UAAU,qBAAf,SACCmD,UAKLJ,EAAShD,KAAKqD,GAGhB,OAAO,mCAAGL,IAEP,MAAyB,YAAtBP,EAASC,OAAOzD,GACf,8BAAMwD,EAASG,QAGf,kBAIX,SAASY,EAAT,GAAmC,IAAlBC,EAAiB,EAAjBA,QAASrF,EAAQ,EAARA,KAClBsF,EAAcC,IAAMC,SACxB,iBAAO,CACL1E,MAAO,SAAC2E,EAAM5E,EAAI6E,GAChB,OAAOD,EAAKE,QAAO,SAAAd,GACjB,IAAIrE,EAAU0C,EAAMC,KAAK5C,SAASsE,EAAIe,OAAJ,UAEhC,IAAI,IAAInF,KAAOD,EAAQE,YACrB,IAAI,IAAIqC,KAAKvC,EAAQE,YAAYD,GAAM,CACrC,IAAIoF,EAAW3C,EAAMC,KAAKzC,YAAYF,EAAQE,YAAYD,GAAKsC,GAAGlC,IAAIC,MAEtE,GAAG4E,EAAYG,GAAU9E,IACvB,OAAO,EAIf,IAAIb,EAASgD,EAAMC,KAAKlD,SAAS4E,EAAIe,OAAJ,QAEjC,SAAGF,EAAYxF,EAAOC,MAAMA,OAAQuF,EAAYxF,EAAOE,aAAaC,aAO1E,IAzB8B,EAmC5ByF,mBAAS,CACXT,UACArF,OACA+F,aAAc,CACZC,QAAS,CAAE,UACXC,OAAQ,CAAE,CAAEpF,GAAI,UAAY,CAAEA,GAAI,cAEpCyE,eAEDY,aACAC,aACAC,aAjBCC,EA7B8B,EA6B9BA,cACAC,EA9B8B,EA8B9BA,kBACAC,EA/B8B,EA+B9BA,aACAd,EAhC8B,EAgC9BA,KACAe,EAjC8B,EAiC9BA,WACAC,EAlC8B,EAkC9BA,UAeF,OACE,mCACE,8BACE,kDAAWJ,KAAX,cACE,kCACE,6BACE,qBAAIxE,UAAU,gBAAgB6E,QAAQ,IAAI5E,MAAO,CAAE6E,UAAW,QAA9D,UACE,sBAAK7E,MAAO,CAAE8E,MAAO,QAASC,MAAO,SAArC,UACE,qBAAK/E,MAAO,CAAE4B,WAAY,SAAUI,SAAU,OAAQgD,MAAO,gBAAiBH,UAAW,SAAzF,sBACA,qBAAK7E,MAAO,CAAE4B,WAAY,OAAQI,SAAU,OAAQ6C,UAAW,SAA/D,4BACA,sBAAK7E,MAAO,CAAE4B,WAAY,OAAQI,SAAU,OAAQ6C,UAAW,SAA/D,8BACmB,sBAAM7E,MAAO,CAAEgF,MAAO,YAAtB,+EACnB,sBAAKhF,MAAO,CAAE4B,WAAY,OAAQI,SAAU,OAAQ6C,UAAW,SAA/D,wBAAqF,mBAAGI,KAAO,yBAAV,0CAEvF,cAAC,EAAD,CACE/G,KAAMkD,EAAMC,KACZlC,OAAQwF,SAYbF,EAAaS,KAAI,SAAAC,GAAW,OAC3B,8CAAQA,EAAYC,uBAApB,aACGD,EAAYE,QAAQH,KAAI,SAAA1C,GAAM,OAC7B,4CAAIuC,MAAOvC,EAAOuC,OAAWvC,EAAO8C,kBAApC,aACG9C,EAAO+C,OAAO,yBAMzB,iDAAWf,KAAX,aACkB,GAAfb,EAAKhC,OAAc,6BAAI,oBAAIiD,QAAQ,IAAI5E,MAAO,CAAE6E,UAAW,SAAUjD,WAAY,QAA1D,yCACvB+B,EAAKuB,KAAI,SAACnC,EAAKlE,GAEd,OADA6F,EAAW3B,GAET,8CAAQA,EAAIyC,eAAZ,aACGzC,EAAI0C,MAAMP,KAAI,SAAAQ,GACb,OACE,4CAAI1F,MAAO,CAAE2F,cAAe,QAAaD,EAAKE,gBAA9C,aACGF,EAAKG,UAEJ,mCACGH,EAAKH,OAAO,UAEbG,EAAKI,aAGPJ,EAAKH,OAAO,cACVG,EAAKK,cAAgB,KAEvBL,EAAKH,OAAO,+BAkDvBS,MAnCf,WACE,IAAMzC,EAAUE,IAAMC,SACpB,iBAAM,CACJ,CACE3E,GAAI,SACJkH,OAAQ,qBAAKjG,MAAO,CAAEkG,gBAAiB,QAASlB,MAAO,QAASmB,aAAc,OAAtE,uBAGRC,SAAU,SACVC,KAAM/D,EAENuB,OAAQ,QACRkB,MAAO,OAGT,CACEhG,GAAI,WACJkH,OAAQ,qBAAKjG,MAAO,CAAEkG,gBAAiB,QAASlB,MAAO,QAASmB,aAAc,OAAtE,iDAGRC,SAAU,UACVC,KAAM/D,EACNuB,OAAQ,QACRkB,MAAO,UAIX,IAGF,OACE,cAACzB,EAAD,CAAOC,QAASA,EAASrF,KAAMkD,EAAMlD,QCpSzCoI,IAASf,OAAO,cAAC,EAAD,IAASgB,SAASC,eAAe,U","file":"static/js/main.fdc27f62.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass FiltroPOA extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const seleccion = {};\r\n        const obtenerSelector = (idActor) => {\r\n            if(!seleccion[idActor])\r\n                seleccion[idActor] = {};\r\n\r\n            return seleccion[idActor];\r\n        };\r\n\r\n        for (let accionId in props.data.acciones) {\r\n            let accion = props.data.acciones[accionId];\r\n\r\n            let selectorArea = obtenerSelector(accion.area);\r\n            selectorArea.area = true;\r\n\r\n            let selectorResp = obtenerSelector(accion.responsable);\r\n            selectorResp.resp = true;\r\n        }\r\n\r\n        for (let tacticaId in props.data.tacticas) {\r\n            let tactica = props.data.tacticas[tacticaId];\r\n\r\n            for(let rol in tactica.capacidades) {\r\n                for(let i in tactica.capacidades[rol]) {\r\n                    let idCap = tactica.capacidades[rol][i].id;\r\n                    let capObj = props.data.capacidades[idCap];\r\n\r\n                    let selectorCap = obtenerSelector(capObj.actor);\r\n                    selectorCap.cap = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.state = {\r\n            seleccion,\r\n            filtro: props.filtro\r\n        };\r\n    }\r\n\r\n    cambiaTodos(e, activar) {\r\n        for (let actor in this.state.seleccion) {\r\n            let filtroInfo = this.state.seleccion[actor];\r\n\r\n            if(filtroInfo.area != undefined) filtroInfo.area = activar ? true : false;\r\n            if(filtroInfo.resp != undefined) filtroInfo.resp = activar ? true : false;\r\n            if(filtroInfo.cap != undefined) filtroInfo.cap = activar ? true : false;\r\n        }\r\n        \r\n        this.state.filtro('tacticas', this.state.seleccion);\r\n        this.setState(this.state);\r\n    }\r\n\r\n    cambiaActor(e, tipoCambio) {\r\n        let idActor = e.currentTarget.getAttribute('data-id-filtro');\r\n        this.state.seleccion[idActor][tipoCambio] = this.state.seleccion[idActor][tipoCambio] == 0 ? 1 : 0;\r\n        this.state.filtro('tacticas', this.state.seleccion);\r\n        \r\n        this.setState(this.state);        \r\n    }\r\n\r\n    render() {\r\n        let selectElems = []\r\n\r\n        for (let actor in this.state.seleccion) {\r\n            let filtroInfo = this.state.seleccion[actor];\r\n\r\n            selectElems.push(\r\n                <div\r\n                    className='elemFiltro'                    \r\n                    style={{ display: 'flex', alignItems: 'center' }}\r\n                >                    \r\n                    <div style={{ padding: '3px' }}>{actor}</div>\r\n                    <div style={{ display: 'flex' }}>\r\n                        {filtroInfo.area == undefined ? null : \r\n                            <div \r\n                                className={'actFiltro' + (filtroInfo.area ? ' filtroOn': ' filtroOff')}\r\n                                data-id-filtro={actor}\r\n                                onClick={(e) => this.cambiaActor(e, 'area')}\r\n                            >A</div>\r\n                        }\r\n                        {filtroInfo.resp == undefined ? null : \r\n                            <div \r\n                                className={'actFiltro' + (filtroInfo.resp ? ' filtroOn': ' filtroOff')}\r\n                                data-id-filtro={actor}\r\n                                onClick={(e) => this.cambiaActor(e, 'resp')}\r\n                            >R</div>\r\n                        }\r\n                        {filtroInfo.cap == undefined ? null : \r\n                            <div \r\n                                className={'actFiltro' + (filtroInfo.cap ? ' filtroOn': ' filtroOff')}\r\n                                data-id-filtro={actor}\r\n                                onClick={(e) => this.cambiaActor(e, 'cap')}\r\n                            >C</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        selectElems.sort((e1, e2) => {\r\n            if(e2.props['data-id-filtro'] < e1.props['data-id-filtro'])\r\n                return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n        return <div style={{ display: 'flex', flexWrap: 'wrap' }}>            \r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, true)}\r\n            >\r\n                Todo\r\n            </div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, false)}\r\n            >\r\n                Nada\r\n            </div>\r\n            {selectElems}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FiltroPOA","import React, { Component } from 'react'\r\n\r\nclass FiltroActores extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const seleccion = {};\r\n\r\n        for (let actor in props.actores)\r\n            seleccion[actor] = 1;\r\n\r\n        this.state = {\r\n            seleccion,\r\n            filtro: props.filtro\r\n        };\r\n\r\n        this.cambiaActor = this.cambiaActor.bind(this);\r\n        this.cambiaTodos = this.cambiaTodos.bind(this);\r\n    }\r\n\r\n    cambiaTodos(e, activar) {\r\n        for (let actor in this.state.seleccion)\r\n            this.state.seleccion[actor] = activar ? 1 : 0;\r\n\r\n        this.state.filtro('tacticas', { tipo: 'actor', input: this.state.seleccion });\r\n        this.setState(this.state);\r\n    }\r\n\r\n    cambiaActor(e) {\r\n        let idActor = e.currentTarget.getAttribute('data-id-filtro');\r\n        this.state.seleccion[idActor] = this.state.seleccion[idActor] == 0 ? 1 : 0;\r\n\r\n        this.state.filtro('tacticas', { tipo: 'actor', input: this.state.seleccion });\r\n        this.setState(this.state);        \r\n    }\r\n\r\n    render() {\r\n        let selectElems = []\r\n\r\n        for (let actor in this.state.seleccion) {\r\n            selectElems.push(\r\n                <div\r\n                    className={'elemFiltro ' + (this.state.seleccion[actor] == 0 ? 'filtroOff' : 'filtroOn')}\r\n                    data-id-filtro={actor}\r\n                    onClick={this.cambiaActor}\r\n                >\r\n                    {actor}\r\n                </div>\r\n            );\r\n        }\r\n\r\n        selectElems.sort((e1, e2) => {\r\n            if(e2.props['data-id-filtro'] < e1.props['data-id-filtro'])\r\n                return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n        return <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n            <div style={{ fontSize: '12px', marginRight: '5px', color: 'darkblue' }}>Filtro capacidades:</div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, true)}\r\n            >\r\n                Todas\r\n            </div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, false)}\r\n            >\r\n                Ninguna\r\n            </div>\r\n            {selectElems}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FiltroActores","import React, { Component } from 'react'\r\n\r\nclass FiltroAreas extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const seleccion = {};\r\n\r\n        for (let accion in props.acciones) {\r\n            seleccion[props.acciones[accion].area] = 1;\r\n        } \r\n\r\n        this.state = {\r\n            seleccion,\r\n            filtro: props.filtro\r\n        };\r\n\r\n        this.cambiaArea = this.cambiaArea.bind(this);\r\n        this.cambiaTodos = this.cambiaTodos.bind(this);\r\n    }\r\n\r\n    cambiaTodos(e, activar) {\r\n        for (let area in this.state.seleccion)\r\n            this.state.seleccion[area] = activar ? 1 : 0;\r\n\r\n        this.state.filtro('accion', { tipo: 'area', input: this.state.seleccion });\r\n        this.setState(this.state);\r\n    }\r\n\r\n    cambiaArea(e) {\r\n        let area = e.currentTarget.getAttribute('data-id-filtro');\r\n        this.state.seleccion[area] = this.state.seleccion[area] == 0 ? 1 : 0;\r\n\r\n        this.state.filtro('accion', { tipo: 'area', input: this.state.seleccion });\r\n        this.setState(this.state);        \r\n    }\r\n\r\n    render() {\r\n        let selectElems = []\r\n\r\n        for (let area in this.state.seleccion) {\r\n            selectElems.push(\r\n                <div\r\n                    className={'elemFiltro ' + (this.state.seleccion[area] == 0 ? 'filtroOff' : 'filtroOn')}\r\n                    data-id-filtro={area}\r\n                    onClick={this.cambiaArea}\r\n                >\r\n                    {area}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        selectElems.sort((e1, e2) => {\r\n            if(e2.props['data-id-filtro'] < e1.props['data-id-filtro'])\r\n                return 1;\r\n\r\n            return 0;\r\n        });\r\n\r\n        return <div style={{ marginBottom: '3px', display: 'flex', flexWrap: 'wrap' }}>\r\n            <div style={{ fontSize: '12px', marginRight: '5px', color: 'darkblue' }}>Filtro área:</div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, true)}\r\n            >\r\n                Todas\r\n            </div>\r\n            <div \r\n                className='elemFiltroGen'\r\n                onClick={(e) => this.cambiaTodos(e, false)}\r\n            >\r\n                Ninguna\r\n            </div>\r\n            {selectElems}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default FiltroAreas","import React from 'react'\nimport { useTable, useFilters, useGroupBy, useSortBy } from 'react-table'\nimport mData from './data.json'\nimport FiltroActores from './FiltroActores'\nimport FiltroAreas from './FiltroAreas'\nimport FiltroPOA from './FiltroPOA'\n\nconst indicesRoles = { 'Responsable': 0, 'Aprobador': 1, 'Soporte': 2, 'Consultado': 3, 'Informado': 4 }\n\nfunction obtenerElementosCapacidadesTacticas(tactica) {\n  let capContElems = [ null, null, null, null, null ] ;\n\n  for(let capRol in tactica.capacidades) {\n    let capsDetallesElems = [];\n\n    for(let j in tactica.capacidades[capRol]) {\n      let capInfo = tactica.capacidades[capRol][j];\n      let capsDetalles = mData.meta.capacidades[capInfo.id];\n\n      capsDetallesElems.push(<div className=\"contCapDetalle\">\n        <div className='genLabelB'>{capsDetalles.actor}</div>        \n        <div className='genLabelG'>{capsDetalles.tipo}</div>\n        <div className='nombreCapacidad'>{capsDetalles.desc} </div>\n      </div>);\n    }\n\n    capContElems[indicesRoles[capRol]] = <div className=\"contCapRol\">\n      <div className=\"contRol\">{capRol}</div>\n      <div className=\"contCapsDetalles\">\n        {capsDetallesElems}\n      </div>\n    </div>;\n  }\n\n  return capContElems;\n}\n\nfunction obtenerElementosIndicadoresMDVs(tactica) {\n  let capContIndMDVs = [];\n\n  if(tactica.ios.length > 0) {\n    capContIndMDVs.push(<div className=\"contInd\">\n      <div className=\"contIndDesc\">\n        <div>\n          <span className=\"genLabelBL\">Indicador</span> \n          <span style={{ fontWeight: 'bold' }}>{tactica.ios[0].nombre}</span>\n        </div>\n        <div>\n          <span style={{ fontStyle: 'italic' }}>{tactica.ios[0].formula}</span>\n        </div>\n      </div>\n      <div className=\"contIndMeta\">\n        <div style={{ fontSize: '13px', fontWeight: 'bold' }}>Meta</div>\n        <div style={{ fontSize: '22px', fontWeight: 'bold' }}>{tactica.ios[0].meta}</div>\n      </div>\n    </div>);\n  }\n\n  for(let i in tactica.mdvs) {\n    let estandaresElems = [];\n\n    for(let j in tactica.mdvs[i].estandares) {\n      estandaresElems.push(<li style={{ margin: '0px' }}>{tactica.mdvs[i].estandares[j]}</li>)\n    }\n\n    capContIndMDVs.push(<div className=\"contMDV\">\n      <div className=\"contMDVDesc\">\n        <div>\n          <span className=\"genLabelBL\">MDV</span>\n          <span style={{ fontWeight: 'bold' }}>{tactica.mdvs[i].nombre}</span>\n        </div>\n        <div className=\"contMDVEstandares\">\n          <div className=\"contListaEstandares\">\n            <ul>{estandaresElems}</ul>\n          </div>\n        </div>\n      </div>\n      {tactica.mdvs[i].plazo ? <div className=\"contMDVPlazo\">\n        <div style={{ fontSize: '12px', fontWeight: 'bold' }}>Plazo</div>\n        <div style={{ fontSize: '20px', fontWeight: 'bolder' }}>{tactica.mdvs[i].plazo}</div>\n      </div> : <></>}\n    </div>);\n  }\n\n  return capContIndMDVs;\n}\n\nfunction renderCell(cellInfo) {\n  if(cellInfo.column.id == 'accion') {\n    const idAccion = cellInfo.value;\n    const accion = mData.meta.acciones[idAccion];\n    const respAccion = mData.meta.actores[accion.responsable];\n\n    return <div className=\"contAccion\">\n      <div className=\"contAccionInfo\">\n        <div className='accionId'>{idAccion}</div>\n        <div className='genLabelB'>{accion.responsable}</div>\n        <div className='genLabelG'>{accion.tipo}</div>\n      </div>\n      <div className=\"contAccionDetalle\">\n        <div className='accionTitulo'>{accion.titulo}</div>\n        <div className='accionObjetivo'>{accion.objetivo}</div>\n        </div>\n    </div>;\n  }\n  else if(cellInfo.column.id == 'tacticas') {\n    //console.log(cellInfo);\n    let baseElem = []\n\n    for(let i in cellInfo.row.subRows) {\n      const tactica = mData.meta.tacticas[cellInfo.row.subRows[i].original.tactica];\n\n      const capContElems = obtenerElementosCapacidadesTacticas(tactica);\n      const capContIndicadoresMDVs = obtenerElementosIndicadoresMDVs(tactica);\n\n      const elemTactica = <div className=\"contTactica\">\n        <div className=\"contTacticaDesc\">\n          <div className=\"tacticaId\">{tactica.tipo} {tactica.cod}</div>\n          {tactica.prioridad == 'Alta' ? <div className='indPrioridad'>Prioritaria</div> : null}\n          <div className=\"tacticaDesc\">{tactica.desc}</div>\n        </div>\n        <div className=\"contTacticaDetalles\">\n          <div className=\"contTacticaCaps\">            \n            {capContElems}\n          </div>\n          <div className=\"contTacticaIndMDVs\">\n          {capContIndicadoresMDVs}\n          </div>\n        </div>\n      </div>\n\n      baseElem.push(elemTactica);\n    }\n\n    return <>{baseElem}</>;\n  }\n  else if(cellInfo.column.id == 'mdvs-ios') {\n    return <div>{cellInfo.value}</div>;\n  }\n  else {\n    return 'No configurado.'\n  }\n}\n\nfunction Table({ columns, data }) {\n  const filterTypes = React.useMemo(\n    () => ({\n      actor: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          let tactica = mData.meta.tacticas[row.values['tacticas']];\n\n            for(let rol in tactica.capacidades) {\n              for(let j in tactica.capacidades[rol]) {\n                let actorCap = mData.meta.capacidades[tactica.capacidades[rol][j].id].actor;\n\n                if(filterValue[actorCap].cap)\n                  return true;\n              }\n            }\n\n          let accion = mData.meta.acciones[row.values['accion']];\n\n          if(filterValue[accion.area].area || filterValue[accion.responsable].resp)\n            return true;\n\n          return false;\n        })\n      },\n    }),\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    setFilter,\n  } = useTable({ \n    columns, \n    data,\n    initialState: {\n      groupBy: [ 'accion' ],\n      sortBy: [ { id: 'accion' }, { id: 'tacticas' } ]\n    },\n    filterTypes\n   },   \n   useFilters,\n   useGroupBy, \n   useSortBy\n  )\n\n  return (\n    <>      \n      <div>\n        <table {...getTableProps()}>\n          <thead>            \n            <tr>\n              <th className='headerFiltros' colSpan='2' style={{ textAlign: 'left' }}>\n                <div style={{ float: 'right', width: '250px' }}>\n                  <div style={{ fontWeight: 'bolder', fontSize: '40px', color: 'darkslategrey', textAlign: 'right' }}>POA 2021</div>\n                  <div style={{ fontWeight: 'bold', fontSize: '12px', textAlign: 'right' }}>Versión 1.0</div>\n                  <div style={{ fontWeight: 'bold', fontSize: '10px', textAlign: 'right' }}>\n                    Desarrollado por <span style={{ color: 'darkblue' }}>Dirección de Planificación y Aseguramiento de la Calidad</span></div>\n                  <div style={{ fontWeight: 'bold', fontSize: '10px', textAlign: 'right' }}>Consultas: <a href = \"enrique.urra@uaysen.cl\">enrique.urra@uaysen.cl</a></div>                    \n                </div>\n                <FiltroPOA \n                  data={mData.meta}\n                  filtro={setFilter}\n                />\n                {/*<FiltroAreas \n                  acciones={mData.meta.acciones}\n                  filtro={setFilter}\n                />\n                <FiltroActores \n                  actores={mData.meta.actores}\n                  filtro={setFilter}\n                />*/}\n              </th>\n            </tr>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th width={column.width} {...column.getHeaderProps()}>\n                    {column.render('Header')}                  \n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.length == 0 ? <tr><td colSpan='2' style={{ textAlign: 'center', fontWeight: 'bold' }}>No hay datos que mostrar.</td></tr> :\n             rows.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td style={{ verticalAlign: 'top' }} {...cell.getCellProps()}>\n                        {cell.isGrouped ? (\n                          // If it's a grouped cell, add an expander and row count\n                          <>\n                            {cell.render('Cell')}\n                          </>\n                        ) : cell.isAggregated ? (\n                          // If the cell is aggregated, use the Aggregated\n                          // renderer for cell\n                          cell.render('Aggregated')\n                        ) : cell.isPlaceholder ? null : ( // For cells with repeated values, render null\n                          // Otherwise, just render the regular cell\n                          cell.render('Cell')\n                        )}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })} \n          </tbody>\n        </table>\n      </div>      \n    </>\n  )\n}\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n      {\n        id: \"accion\",\n        Header: <div style={{ backgroundColor: 'black', color: 'white', borderRadius: '5px' }}>\n          Acción\n        </div>,\n        accessor: 'accion',\n        Cell: renderCell,\n        //Filter: SelectColumnFilter,\n        filter: 'actor',\n        width: '30%'/*,\n        sortType: sortFuncs.actor*/\n      },\n      {\n        id: \"tacticas\",\n        Header: <div style={{ backgroundColor: 'black', color: 'white', borderRadius: '5px' }}>\n          Tacticas, roles, indicadores y MDVs\n        </div>,\n        accessor: 'tactica',\n        Cell: renderCell,\n        filter: 'actor',\n        width: '70%'\n        //Cell: renderCell\n      }\n    ],\n    []\n  )\n\n  return (\n    <Table columns={columns} data={mData.data} />\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}